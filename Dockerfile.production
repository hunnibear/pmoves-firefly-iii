# Production Dockerfile for Firefly III with AI Integration
FROM fireflyiii/core:latest

# Add build arguments for optimization
ARG BUILD_DATE
ARG VERSION
ARG REVISION

# Add labels for better container management
LABEL maintainer="your-email@example.com" \
      org.opencontainers.image.title="Firefly III with AI Integration" \
      org.opencontainers.image.description="Personal finances manager with AI capabilities" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${REVISION}"

# Install production dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-venv \
    curl \
    ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \
    && rm -rf /var/tmp/*

# Create directory for AI scripts
RUN mkdir -p /var/www/html/ai-scripts

# Install Python dependencies for AI processing (production versions)
RUN python3 -m pip install --no-cache-dir --upgrade pip \
    && python3 -m pip install --no-cache-dir \
    requests==2.31.0 \
    openai==1.3.7 \
    anthropic==0.7.8 \
    google-generativeai==0.3.2 \
    huggingface-hub==0.19.4

# Copy AI integration scripts (production optimized)
# COPY --chown=www-data:www-data ai-scripts/ /var/www/html/ai-scripts/

# Set proper permissions with security in mind
RUN chown -R www-data:www-data /var/www/html/ai-scripts \
    && chmod -R 755 /var/www/html/ai-scripts

# Configure PHP for production
RUN echo "memory_limit = 512M" >> /usr/local/etc/php/conf.d/memory.ini \
    && echo "max_execution_time = 300" >> /usr/local/etc/php/conf.d/execution.ini \
    && echo "upload_max_filesize = 64M" >> /usr/local/etc/php/conf.d/upload.ini \
    && echo "post_max_size = 64M" >> /usr/local/etc/php/conf.d/upload.ini

# Add production health check with better monitoring
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=5 \
    CMD curl -f http://localhost:8080/health || exit 1

# Create non-root user for security (if not already created)
RUN if ! id -u firefly >/dev/null 2>&1; then \
        useradd -r -s /bin/false firefly; \
    fi

# Security: Remove unnecessary packages and files
RUN apt-get autoremove -y \
    && apt-get autoclean -y

# Expose port
EXPOSE 8080

# Set environment for production
ENV APP_ENV=production
ENV APP_DEBUG=false

# Use the original entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
